import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as K,o as f,c as o,d as a,b as r,w as i,e,f as d}from"./app-b5233593.js";const n={},E=d('<h2 id="kafka作用" tabindex="-1"><a class="header-anchor" href="#kafka作用" aria-hidden="true">#</a> KafKa作用</h2><ul><li>缓冲/削峰、解耦、异步</li></ul><h2 id="kafka两种模式" tabindex="-1"><a class="header-anchor" href="#kafka两种模式" aria-hidden="true">#</a> KafKa两种模式</h2><ul><li>点对点模式</li><li>发布订阅模式</li></ul><h2 id="kafka基础架构" tabindex="-1"><a class="header-anchor" href="#kafka基础架构" aria-hidden="true">#</a> KafKa基础架构</h2><ul><li>Producer：消息生产者，就是向Kafka broker发消息的客户端。</li><li>Consumer：消息消费者，向Kafka broker 取消息的客户端。</li><li>Consumer Group（CG）：消费者组，由多个consumer组成。消费者组内每个消<br> 费者负责消费不同分区的数据，一个分区只能由一个组内消费者消费；消费者组之间互不影响。所有的消费者都属于某个消费者组，即消费者组是逻辑上的一个订阅者。</li><li>Broker：一台Kafka 服务器就是一个broker。一个集群由多个broker 组成。一个broker可以容纳多个topic。</li><li>Topic：可以理解为一个队列，生产者和消费者面向的都是一个topic。</li><li>Partition：为了实现扩展性，一个非常大的topic可以分布到多个broker（即服务器）上，一个topic可以分为多个partition，每个partition 是一个有序的队列。</li><li>Replica：副本。一个topic 的每个分区都有若干个副本，一个Leader 和若干个<br> Follower。</li><li>Leader：每个分区多个副本的“主”，生产者发送数据的对象，以及消费者消费数<br> 据的对象都是Leader。</li><li>Follower：每个分区多个副本中的“从”，实时从Leader 中同步数据，保持和<br> Leader 数据的同步。Leader 发生故障时，某个Follower 会成为新的Leader。</li></ul><h2 id="kafka项目" tabindex="-1"><a class="header-anchor" href="#kafka项目" aria-hidden="true">#</a> KafKa项目</h2>',7),h=a("h2",{id:"kafka应用篇",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#kafka应用篇","aria-hidden":"true"},"#"),e(" KafKa应用篇")],-1),c=a("h2",{id:"kafka源码篇",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#kafka源码篇","aria-hidden":"true"},"#"),e(" KafKa源码篇")],-1);function u(s,k){const l=K("RouterLink");return f(),o("div",null,[E,a("ul",null,[a("li",null,[r(l,{to:"/KafKa/KafKa%E9%A1%B9%E7%9B%AE/KafKa%E9%A1%B9%E7%9B%AE_%E5%AE%89%E8%A3%85.html"},{default:i(()=>[e("KafKa项目_安装")]),_:1})]),a("li",null,[r(l,{to:"/KafKa/KafKa%E9%A1%B9%E7%9B%AE/KafKa%E9%A1%B9%E7%9B%AE_%E7%94%9F%E4%BA%A7%E8%80%85.html"},{default:i(()=>[e("KafKa项目_生产者")]),_:1})]),a("li",null,[r(l,{to:"/KafKa/KafKa%E9%A1%B9%E7%9B%AE/KafKa%E9%A1%B9%E7%9B%AE_KafKa_Broker.html"},{default:i(()=>[e("KafKa项目_Broker")]),_:1})]),a("li",null,[r(l,{to:"/KafKa/KafKa%E9%A1%B9%E7%9B%AE/KafKa%E9%A1%B9%E7%9B%AE_%E6%B6%88%E8%B4%B9%E8%80%85.html"},{default:i(()=>[e("KafKa项目_消费者")]),_:1})]),a("li",null,[r(l,{to:"/KafKa/KafKa%E9%A1%B9%E7%9B%AE/KafKa%E9%A1%B9%E7%9B%AE_Eagle%E7%9B%91%E6%8E%A7.html"},{default:i(()=>[e("KafKa项目_监控")]),_:1})])]),h,a("ul",null,[a("li",null,[r(l,{to:"/KafKa/KafKa%E9%A1%B9%E7%9B%AE/KafKa%E5%BA%94%E7%94%A8%E7%AF%87.html"},{default:i(()=>[e("KafKa应用篇")]),_:1}),e("：")])]),c,a("ul",null,[a("li",null,[r(l,{to:"/KafKa/KafKa%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90.html"},{default:i(()=>[e("KafKa源码篇")]),_:1})])])])}const A=t(n,[["render",u],["__file","KafKaBase.html.vue"]]);export{A as default};
