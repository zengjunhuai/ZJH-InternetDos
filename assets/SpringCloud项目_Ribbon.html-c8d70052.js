import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o,c,d as n,e as s,b as l,f as a}from"./app-b5233593.js";const r="/ZJH-InternetDos/assets/image/springcloud_ribbon_01.png",i="/ZJH-InternetDos/assets/image/springcloud_ribbon_02.png",u="/ZJH-InternetDos/assets/image/springcloud_ribbon_03.png",k="/ZJH-InternetDos/assets/image/springcloud_ribbon_04.png",d="/ZJH-InternetDos/assets/image/springcloud_ribbon_05.png",v={},m=a(`<blockquote><p>该文章参考作者macrozheng博客</p></blockquote><p>Spring Cloud Ribbon 是Spring Cloud Netflix 子项目的核心组件之一，主要给服务间调用及API网关转发提供负载均衡的功能，本文将对其用法进行详细介绍。</p><h3 id="ribbon简介" tabindex="-1"><a class="header-anchor" href="#ribbon简介" aria-hidden="true">#</a> Ribbon简介</h3><p>在微服务架构中，很多服务都会部署多个，其他服务去调用该服务的时候，如何保证负载均衡是个不得不去考虑的问题。负载均衡可以增加系统的可用性和扩展性，当我们使用RestTemplate来调用其他服务时，Ribbon可以很方便的实现负载均衡功能。</p><h3 id="resttemplate的使用" tabindex="-1"><a class="header-anchor" href="#resttemplate的使用" aria-hidden="true">#</a> RestTemplate的使用</h3><p>RestTemplate是一个HTTP客户端，使用它我们可以方便的调用HTTP接口，支持GET、POST、PUT、DELETE等方法。</p><h6 id="get请求方法" tabindex="-1"><a class="header-anchor" href="#get请求方法" aria-hidden="true">#</a> GET请求方法</h6><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token constant">T</span> <span class="token function">getForObject</span><span class="token punctuation">(</span>String url<span class="token punctuation">,</span> Class<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> responseType<span class="token punctuation">,</span> Object<span class="token operator">...</span> uriVariables<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token constant">T</span> <span class="token function">getForObject</span><span class="token punctuation">(</span>String url<span class="token punctuation">,</span> Class<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> responseType<span class="token punctuation">,</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> <span class="token operator">?</span><span class="token operator">&gt;</span> uriVariables<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token constant">T</span> <span class="token function">getForObject</span><span class="token punctuation">(</span><span class="token constant">URI</span> url<span class="token punctuation">,</span> Class<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> responseType<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> ResponseEntity<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token function">getForEntity</span><span class="token punctuation">(</span>String url<span class="token punctuation">,</span> Class<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> responseType<span class="token punctuation">,</span> Object<span class="token operator">...</span> uriVariables<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> ResponseEntity<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token function">getForEntity</span><span class="token punctuation">(</span>String url<span class="token punctuation">,</span> Class<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> responseType<span class="token punctuation">,</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> <span class="token operator">?</span><span class="token operator">&gt;</span> uriVariables<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> ResponseEntity<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token function">getForEntity</span><span class="token punctuation">(</span><span class="token constant">URI</span> var1<span class="token punctuation">,</span> Class<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> responseType<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>getForObject方法<br> 返回对象为响应体中数据转化成的对象，举例如下：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">GetMapping</span></span><span class="token punctuation">(</span><span class="token string">&quot;/{id}&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> CommonResult <span class="token function">getUser</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">PathVariable</span></span> Long id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span>userServiceUrl <span class="token operator">+</span> <span class="token string">&quot;/user/{1}&quot;</span><span class="token punctuation">,</span> CommonResult<span class="token punctuation">.</span>class<span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>getForEntity方法<br> 返回对象为ResponseEntity对象，包含了响应中的一些重要信息，比如响应头、响应状态码、响应体等，举例如下：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">GetMapping</span></span><span class="token punctuation">(</span><span class="token string">&quot;/getEntityByUsername&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> CommonResult <span class="token function">getEntityByUsername</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">RequestParam</span></span> String username<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ResponseEntity<span class="token operator">&lt;</span>CommonResult<span class="token operator">&gt;</span> entity <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForEntity</span><span class="token punctuation">(</span>userServiceUrl <span class="token operator">+</span> <span class="token string">&quot;/user/getByUsername?username={1}&quot;</span><span class="token punctuation">,</span> CommonResult<span class="token punctuation">.</span>class<span class="token punctuation">,</span> username<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>entity<span class="token punctuation">.</span><span class="token function">getStatusCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is2xxSuccessful</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> entity<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">CommonResult</span><span class="token punctuation">(</span><span class="token string">&quot;操作失败&quot;</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="post请求方法" tabindex="-1"><a class="header-anchor" href="#post请求方法" aria-hidden="true">#</a> POST请求方法</h6><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token constant">T</span> <span class="token function">postForObject</span><span class="token punctuation">(</span>String url<span class="token punctuation">,</span> <span class="token decorator"><span class="token at operator">@</span><span class="token function">Nullable</span></span> Object request<span class="token punctuation">,</span> Class<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> responseType<span class="token punctuation">,</span> Object<span class="token operator">...</span> uriVariables<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token constant">T</span> <span class="token function">postForObject</span><span class="token punctuation">(</span>String url<span class="token punctuation">,</span> <span class="token decorator"><span class="token at operator">@</span><span class="token function">Nullable</span></span> Object request<span class="token punctuation">,</span> Class<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> responseType<span class="token punctuation">,</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> <span class="token operator">?</span><span class="token operator">&gt;</span> uriVariables<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token constant">T</span> <span class="token function">postForObject</span><span class="token punctuation">(</span><span class="token constant">URI</span> url<span class="token punctuation">,</span> <span class="token decorator"><span class="token at operator">@</span><span class="token function">Nullable</span></span> Object request<span class="token punctuation">,</span> Class<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> responseType<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> ResponseEntity<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token function">postForEntity</span><span class="token punctuation">(</span>String url<span class="token punctuation">,</span> <span class="token decorator"><span class="token at operator">@</span><span class="token function">Nullable</span></span> Object request<span class="token punctuation">,</span> Class<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> responseType<span class="token punctuation">,</span> Object<span class="token operator">...</span> uriVariables<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> ResponseEntity<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token function">postForEntity</span><span class="token punctuation">(</span>String url<span class="token punctuation">,</span> <span class="token decorator"><span class="token at operator">@</span><span class="token function">Nullable</span></span> Object request<span class="token punctuation">,</span> Class<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> responseType<span class="token punctuation">,</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> <span class="token operator">?</span><span class="token operator">&gt;</span> uriVariables<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> ResponseEntity<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token function">postForEntity</span><span class="token punctuation">(</span><span class="token constant">URI</span> url<span class="token punctuation">,</span> <span class="token decorator"><span class="token at operator">@</span><span class="token function">Nullable</span></span> Object request<span class="token punctuation">,</span> Class<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> responseType<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>postForObject示例</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">PostMapping</span></span><span class="token punctuation">(</span><span class="token string">&quot;/create&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> CommonResult <span class="token function">create</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">RequestBody</span></span> User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> restTemplate<span class="token punctuation">.</span><span class="token function">postForObject</span><span class="token punctuation">(</span>userServiceUrl <span class="token operator">+</span> <span class="token string">&quot;/user/create&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">,</span> CommonResult<span class="token punctuation">.</span>class<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>postForEntity示例</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">PostMapping</span></span><span class="token punctuation">(</span><span class="token string">&quot;/create&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> CommonResult <span class="token function">create</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">RequestBody</span></span> User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> restTemplate<span class="token punctuation">.</span><span class="token function">postForEntity</span><span class="token punctuation">(</span>userServiceUrl <span class="token operator">+</span> <span class="token string">&quot;/user/create&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">,</span> CommonResult<span class="token punctuation">.</span>class<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="put请求方法" tabindex="-1"><a class="header-anchor" href="#put请求方法" aria-hidden="true">#</a> PUT请求方法</h6><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span>String url<span class="token punctuation">,</span> <span class="token decorator"><span class="token at operator">@</span><span class="token function">Nullable</span></span> Object request<span class="token punctuation">,</span> Object<span class="token operator">...</span> uriVariables<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span>String url<span class="token punctuation">,</span> <span class="token decorator"><span class="token at operator">@</span><span class="token function">Nullable</span></span> Object request<span class="token punctuation">,</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> <span class="token operator">?</span><span class="token operator">&gt;</span> uriVariables<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token constant">URI</span> url<span class="token punctuation">,</span> <span class="token decorator"><span class="token at operator">@</span><span class="token function">Nullable</span></span> Object request<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>PUT请求示例</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">PutMapping</span></span><span class="token punctuation">(</span><span class="token string">&quot;/update&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> CommonResult <span class="token function">update</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">RequestBody</span></span> User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    restTemplate<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>userServiceUrl <span class="token operator">+</span> <span class="token string">&quot;/user/update&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">CommonResult</span><span class="token punctuation">(</span><span class="token string">&quot;操作成功&quot;</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="delete请求方法" tabindex="-1"><a class="header-anchor" href="#delete请求方法" aria-hidden="true">#</a> DELETE请求方法</h6><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">void</span> <span class="token keyword">delete</span><span class="token punctuation">(</span>String url<span class="token punctuation">,</span> Object<span class="token operator">...</span> uriVariables<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token keyword">delete</span><span class="token punctuation">(</span>String url<span class="token punctuation">,</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> <span class="token operator">?</span><span class="token operator">&gt;</span> uriVariables<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token keyword">delete</span><span class="token punctuation">(</span><span class="token constant">URI</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>DELETE请求示例</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">DeleteMapping</span></span><span class="token punctuation">(</span><span class="token string">&quot;/delete/{id}&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> CommonResult <span class="token keyword">delete</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">PathVariable</span></span> Long id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   restTemplate<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>userServiceUrl <span class="token operator">+</span> <span class="token string">&quot;/user/delete/{1}&quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">CommonResult</span><span class="token punctuation">(</span><span class="token string">&quot;操作成功&quot;</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建一个user-service模块" tabindex="-1"><a class="header-anchor" href="#创建一个user-service模块" aria-hidden="true">#</a> 创建一个user-service模块</h3><p>首先我们创建一个user-service，用于给Ribbon提供服务调用。</p><h6 id="在pom-xml中添加相关依赖" tabindex="-1"><a class="header-anchor" href="#在pom-xml中添加相关依赖" aria-hidden="true">#</a> 在pom.xml中添加相关依赖</h6><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">&lt;</span>dependency<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>groupId<span class="token operator">&gt;</span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>artifactId<span class="token operator">&gt;</span>spring<span class="token operator">-</span>cloud<span class="token operator">-</span>starter<span class="token operator">-</span>netflix<span class="token operator">-</span>eureka<span class="token operator">-</span>client<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>dependency<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>groupId<span class="token operator">&gt;</span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>artifactId<span class="token operator">&gt;</span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">-</span>web<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="在application-yml进行配置" tabindex="-1"><a class="header-anchor" href="#在application-yml进行配置" aria-hidden="true">#</a> 在application.yml进行配置</h6><p>在application.yml进行配置</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>server<span class="token operator">:</span>
  port<span class="token operator">:</span> <span class="token number">8201</span>
spring<span class="token operator">:</span>
  application<span class="token operator">:</span>
    name<span class="token operator">:</span> user<span class="token operator">-</span>service
eureka<span class="token operator">:</span>
  client<span class="token operator">:</span>
    register<span class="token operator">-</span><span class="token keyword">with</span><span class="token operator">-</span>eureka<span class="token operator">:</span> <span class="token boolean">true</span>
    fetch<span class="token operator">-</span>registry<span class="token operator">:</span> <span class="token boolean">true</span>
    service<span class="token operator">-</span>url<span class="token operator">:</span>
      defaultZone<span class="token operator">:</span> http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">8001</span><span class="token operator">/</span>eureka<span class="token operator">/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="添加usercontroller用于提供调用接口" tabindex="-1"><a class="header-anchor" href="#添加usercontroller用于提供调用接口" aria-hidden="true">#</a> 添加UserController用于提供调用接口</h6><p>UserController类定义了对User对象常见的CRUD接口。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * Created by macro on 2019/8/29.
 */</span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">RestController</span></span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">RequestMapping</span></span><span class="token punctuation">(</span><span class="token string">&quot;/user&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> Logger <span class="token constant">LOGGER</span> <span class="token operator">=</span> LoggerFactory<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token decorator"><span class="token at operator">@</span><span class="token function">Autowired</span></span>
    <span class="token keyword">private</span> UserService userService<span class="token punctuation">;</span>

    <span class="token decorator"><span class="token at operator">@</span><span class="token function">PostMapping</span></span><span class="token punctuation">(</span><span class="token string">&quot;/create&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> CommonResult <span class="token function">create</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">RequestBody</span></span> User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        userService<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">CommonResult</span><span class="token punctuation">(</span><span class="token string">&quot;操作成功&quot;</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token decorator"><span class="token at operator">@</span><span class="token function">GetMapping</span></span><span class="token punctuation">(</span><span class="token string">&quot;/{id}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> CommonResult<span class="token operator">&lt;</span>User<span class="token operator">&gt;</span> <span class="token function">getUser</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">PathVariable</span></span> Long id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        User user <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token constant">LOGGER</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;根据id获取用户信息，用户名称为：{}&quot;</span><span class="token punctuation">,</span>user<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">CommonResult<span class="token operator">&lt;</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token decorator"><span class="token at operator">@</span><span class="token function">GetMapping</span></span><span class="token punctuation">(</span><span class="token string">&quot;/getUserByIds&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> CommonResult<span class="token operator">&lt;</span>List<span class="token operator">&lt;</span>User<span class="token operator">&gt;&gt;</span> <span class="token function">getUserByIds</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">RequestParam</span></span> List<span class="token operator">&lt;</span>Long<span class="token operator">&gt;</span> ids<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        List<span class="token operator">&lt;</span>User<span class="token operator">&gt;</span> userList<span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">getUserByIds</span><span class="token punctuation">(</span>ids<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token constant">LOGGER</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;根据ids获取用户信息，用户列表为：{}&quot;</span><span class="token punctuation">,</span>userList<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">CommonResult<span class="token operator">&lt;</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span>userList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token decorator"><span class="token at operator">@</span><span class="token function">GetMapping</span></span><span class="token punctuation">(</span><span class="token string">&quot;/getByUsername&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> CommonResult<span class="token operator">&lt;</span>User<span class="token operator">&gt;</span> <span class="token function">getByUsername</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">RequestParam</span></span> String username<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        User user <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">getByUsername</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">CommonResult<span class="token operator">&lt;</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token decorator"><span class="token at operator">@</span><span class="token function">PostMapping</span></span><span class="token punctuation">(</span><span class="token string">&quot;/update&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> CommonResult <span class="token function">update</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">RequestBody</span></span> User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        userService<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">CommonResult</span><span class="token punctuation">(</span><span class="token string">&quot;操作成功&quot;</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token decorator"><span class="token at operator">@</span><span class="token function">PostMapping</span></span><span class="token punctuation">(</span><span class="token string">&quot;/delete/{id}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> CommonResult <span class="token keyword">delete</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">PathVariable</span></span> Long id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        userService<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">CommonResult</span><span class="token punctuation">(</span><span class="token string">&quot;操作成功&quot;</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建一个ribbon-service模块" tabindex="-1"><a class="header-anchor" href="#创建一个ribbon-service模块" aria-hidden="true">#</a> 创建一个ribbon-service模块</h3><p>这里我们创建一个ribbon-service模块来调用user-service模块演示负载均衡的服务调用。</p><h6 id="在pom-xml中添加相关依赖-1" tabindex="-1"><a class="header-anchor" href="#在pom-xml中添加相关依赖-1" aria-hidden="true">#</a> 在pom.xml中添加相关依赖</h6><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">&lt;</span>dependency<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>groupId<span class="token operator">&gt;</span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>artifactId<span class="token operator">&gt;</span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">-</span>web<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>dependency<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>groupId<span class="token operator">&gt;</span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>artifactId<span class="token operator">&gt;</span>spring<span class="token operator">-</span>cloud<span class="token operator">-</span>starter<span class="token operator">-</span>netflix<span class="token operator">-</span>eureka<span class="token operator">-</span>client<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>dependency<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>groupId<span class="token operator">&gt;</span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>artifactId<span class="token operator">&gt;</span>spring<span class="token operator">-</span>cloud<span class="token operator">-</span>starter<span class="token operator">-</span>netflix<span class="token operator">-</span>ribbon<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="在application-yml进行配置-1" tabindex="-1"><a class="header-anchor" href="#在application-yml进行配置-1" aria-hidden="true">#</a> 在application.yml进行配置</h6><p>主要是配置了端口、注册中心地址及user-service的调用路径。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>server<span class="token operator">:</span>
  port<span class="token operator">:</span> <span class="token number">8301</span>
spring<span class="token operator">:</span>
  application<span class="token operator">:</span>
    name<span class="token operator">:</span> ribbon<span class="token operator">-</span>service
eureka<span class="token operator">:</span>
  client<span class="token operator">:</span>
    register<span class="token operator">-</span><span class="token keyword">with</span><span class="token operator">-</span>eureka<span class="token operator">:</span> <span class="token boolean">true</span>
    fetch<span class="token operator">-</span>registry<span class="token operator">:</span> <span class="token boolean">true</span>
    service<span class="token operator">-</span>url<span class="token operator">:</span>
      defaultZone<span class="token operator">:</span> http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">8001</span><span class="token operator">/</span>eureka<span class="token operator">/</span>
service<span class="token operator">-</span>url<span class="token operator">:</span>
  user<span class="token operator">-</span>service<span class="token operator">:</span> http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>user<span class="token operator">-</span>service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="使用-loadbalanced注解赋予resttemplate负载均衡的能力" tabindex="-1"><a class="header-anchor" href="#使用-loadbalanced注解赋予resttemplate负载均衡的能力" aria-hidden="true">#</a> 使用@LoadBalanced注解赋予RestTemplate负载均衡的能力</h6><p>可以看出使用Ribbon的负载均衡功能非常简单，和直接使用RestTemplate没什么两样，只需给RestTemplate添加一个@LoadBalanced即可。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * Created by macro on 2019/8/29.
 */</span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Configuration</span></span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RibbonConfig</span> <span class="token punctuation">{</span>

    <span class="token decorator"><span class="token at operator">@</span><span class="token function">Bean</span></span>
    <span class="token decorator"><span class="token at operator">@</span><span class="token function">LoadBalanced</span></span>
    <span class="token keyword">public</span> RestTemplate <span class="token function">restTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="添加userribboncontroller类" tabindex="-1"><a class="header-anchor" href="#添加userribboncontroller类" aria-hidden="true">#</a> 添加UserRibbonController类</h6><p>注入RestTemplate，使用其调用user-service中提供的相关接口，这里对GET和POST调用进行了演示，其他方法调用均可参考。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * Created by macro on 2019/8/29.
 */</span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">RestController</span></span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">RequestMapping</span></span><span class="token punctuation">(</span><span class="token string">&quot;/user&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserRibbonController</span> <span class="token punctuation">{</span>
    <span class="token decorator"><span class="token at operator">@</span><span class="token function">Autowired</span></span>
    <span class="token keyword">private</span> RestTemplate restTemplate<span class="token punctuation">;</span>
    <span class="token decorator"><span class="token at operator">@</span><span class="token function">Value</span></span><span class="token punctuation">(</span><span class="token string">&quot;\${service-url.user-service}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> String userServiceUrl<span class="token punctuation">;</span>

    <span class="token decorator"><span class="token at operator">@</span><span class="token function">GetMapping</span></span><span class="token punctuation">(</span><span class="token string">&quot;/{id}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> CommonResult <span class="token function">getUser</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">PathVariable</span></span> Long id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span>userServiceUrl <span class="token operator">+</span> <span class="token string">&quot;/user/{1}&quot;</span><span class="token punctuation">,</span> CommonResult<span class="token punctuation">.</span>class<span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token decorator"><span class="token at operator">@</span><span class="token function">GetMapping</span></span><span class="token punctuation">(</span><span class="token string">&quot;/getByUsername&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> CommonResult <span class="token function">getByUsername</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">RequestParam</span></span> String username<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span>userServiceUrl <span class="token operator">+</span> <span class="token string">&quot;/user/getByUsername?username={1}&quot;</span><span class="token punctuation">,</span> CommonResult<span class="token punctuation">.</span>class<span class="token punctuation">,</span> username<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token decorator"><span class="token at operator">@</span><span class="token function">GetMapping</span></span><span class="token punctuation">(</span><span class="token string">&quot;/getEntityByUsername&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> CommonResult <span class="token function">getEntityByUsername</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">RequestParam</span></span> String username<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ResponseEntity<span class="token operator">&lt;</span>CommonResult<span class="token operator">&gt;</span> entity <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForEntity</span><span class="token punctuation">(</span>userServiceUrl <span class="token operator">+</span> <span class="token string">&quot;/user/getByUsername?username={1}&quot;</span><span class="token punctuation">,</span> CommonResult<span class="token punctuation">.</span>class<span class="token punctuation">,</span> username<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>entity<span class="token punctuation">.</span><span class="token function">getStatusCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is2xxSuccessful</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> entity<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">CommonResult</span><span class="token punctuation">(</span><span class="token string">&quot;操作失败&quot;</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token decorator"><span class="token at operator">@</span><span class="token function">PostMapping</span></span><span class="token punctuation">(</span><span class="token string">&quot;/create&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> CommonResult <span class="token function">create</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">RequestBody</span></span> User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> restTemplate<span class="token punctuation">.</span><span class="token function">postForObject</span><span class="token punctuation">(</span>userServiceUrl <span class="token operator">+</span> <span class="token string">&quot;/user/create&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">,</span> CommonResult<span class="token punctuation">.</span>class<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token decorator"><span class="token at operator">@</span><span class="token function">PostMapping</span></span><span class="token punctuation">(</span><span class="token string">&quot;/update&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> CommonResult <span class="token function">update</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">RequestBody</span></span> User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> restTemplate<span class="token punctuation">.</span><span class="token function">postForObject</span><span class="token punctuation">(</span>userServiceUrl <span class="token operator">+</span> <span class="token string">&quot;/user/update&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">,</span> CommonResult<span class="token punctuation">.</span>class<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token decorator"><span class="token at operator">@</span><span class="token function">PostMapping</span></span><span class="token punctuation">(</span><span class="token string">&quot;/delete/{id}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> CommonResult <span class="token keyword">delete</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">PathVariable</span></span> Long id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> restTemplate<span class="token punctuation">.</span><span class="token function">postForObject</span><span class="token punctuation">(</span>userServiceUrl <span class="token operator">+</span> <span class="token string">&quot;/user/delete/{1}&quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> CommonResult<span class="token punctuation">.</span>class<span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="负载均衡功能演示" tabindex="-1"><a class="header-anchor" href="#负载均衡功能演示" aria-hidden="true">#</a> 负载均衡功能演示</h3>`,50),b=n("li",null,"启动eureka-server于8001端口；",-1),g=n("li",null,"启动user-service于8201端口；",-1),y=n("li",null,[s("启动另一个user-service于8202端口，可以通过修改IDEA中的SpringBoot的启动配置实现："),n("br"),n("img",{src:r,title:"图片标题",width:""})],-1),f=n("li",null,[s("此时运行中的服务如下："),n("br"),n("img",{src:i,title:"图片标题",width:""})],-1),h={href:"http://localhost:8301/user/1",target:"_blank",rel:"noopener noreferrer"},R=n("br",null,null,-1),w=n("img",{src:u,title:"图片标题",width:""},null,-1),q=n("li",null,[s("可以发现运行在8201和8202的user-service控制台交替打印如下信息："),n("br"),n("img",{src:k,title:"图片标题",width:""}),n("br"),n("img",{src:d,title:"图片标题",width:""})],-1),T=a(`<h3 id="ribbon的常用配置" tabindex="-1"><a class="header-anchor" href="#ribbon的常用配置" aria-hidden="true">#</a> Ribbon的常用配置</h3><h6 id="全局配置" tabindex="-1"><a class="header-anchor" href="#全局配置" aria-hidden="true">#</a> 全局配置</h6><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>ribbon<span class="token operator">:</span>
  ConnectTimeout<span class="token operator">:</span> <span class="token number">1000</span> #服务请求连接超时时间（毫秒）
  ReadTimeout<span class="token operator">:</span> <span class="token number">3000</span> #服务请求处理超时时间（毫秒）
  OkToRetryOnAllOperations<span class="token operator">:</span> <span class="token boolean">true</span> #对超时请求启用重试机制
  MaxAutoRetriesNextServer<span class="token operator">:</span> <span class="token number">1</span> #切换重试实例的最大个数
  MaxAutoRetries<span class="token operator">:</span> <span class="token number">1</span> # 切换实例后重试最大次数
  NFLoadBalancerRuleClassName<span class="token operator">:</span> com<span class="token punctuation">.</span>netflix<span class="token punctuation">.</span>loadbalancer<span class="token punctuation">.</span>RandomRule #修改负载均衡算法
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="指定服务进行配置" tabindex="-1"><a class="header-anchor" href="#指定服务进行配置" aria-hidden="true">#</a> 指定服务进行配置</h6><p>与全局配置的区别就是ribbon节点挂在服务名称下面，如下是对ribbon-service调用user-service时的单独配置。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>user<span class="token operator">-</span>service<span class="token operator">:</span>
  ribbon<span class="token operator">:</span>
    ConnectTimeout<span class="token operator">:</span> <span class="token number">1000</span> #服务请求连接超时时间（毫秒）
    ReadTimeout<span class="token operator">:</span> <span class="token number">3000</span> #服务请求处理超时时间（毫秒）
    OkToRetryOnAllOperations<span class="token operator">:</span> <span class="token boolean">true</span> #对超时请求启用重试机制
    MaxAutoRetriesNextServer<span class="token operator">:</span> <span class="token number">1</span> #切换重试实例的最大个数
    MaxAutoRetries<span class="token operator">:</span> <span class="token number">1</span> # 切换实例后重试最大次数
    NFLoadBalancerRuleClassName<span class="token operator">:</span> com<span class="token punctuation">.</span>netflix<span class="token punctuation">.</span>loadbalancer<span class="token punctuation">.</span>RandomRule #修改负载均衡算法
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ribbon的负载均衡策略" tabindex="-1"><a class="header-anchor" href="#ribbon的负载均衡策略" aria-hidden="true">#</a> Ribbon的负载均衡策略</h3><p>所谓的负载均衡策略，就是当A服务调用B服务时，此时B服务有多个实例，这时A服务以何种方式来选择调用的B实例，ribbon可以选择以下几种负载均衡策略。</p><ul><li>com.netflix.loadbalancer.RandomRule：从提供服务的实例中以随机的方式；</li><li>com.netflix.loadbalancer.RoundRobinRule：以线性轮询的方式，就是维护一个计数器，从提供服务的实例中按顺序选取，第一次选第一个，第二次选第二个，以此类推，到最后一个以后再从头来过；</li><li>com.netflix.loadbalancer.RetryRule：在RoundRobinRule的基础上添加重试机制，即在指定的重试时间内，反复使用线性轮询策略来选择可用实例；</li><li>com.netflix.loadbalancer.WeightedResponseTimeRule：对RoundRobinRule的扩展，响应速度越快的实例选择权重越大，越容易被选择；</li><li>com.netflix.loadbalancer.BestAvailableRule：选择并发较小的实例；</li><li>com.netflix.loadbalancer.AvailabilityFilteringRule：先过滤掉故障实例，再选择并发较小的实例；</li><li>com.netflix.loadbalancer.ZoneAwareLoadBalancer：采用双重过滤，同时过滤不是同一区域的实例和故障实例，选择并发较小的实例。</li></ul>`,9);function C(x,U){const t=p("ExternalLinkIcon");return o(),c("div",null,[m,n("ul",null,[b,g,y,f,n("li",null,[s("调用接口进行测试："),n("a",h,[s("http://localhost:8301/user/1"),l(t)]),R,w]),q]),T])}const E=e(v,[["render",C],["__file","SpringCloud项目_Ribbon.html.vue"]]);export{E as default};
