import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as r,c as l,d as s,e as a,b as p,f as n}from"./app-b5233593.js";const i="/ZJH-InternetDos/assets/image/springcloud_eureka_01.png",c="/ZJH-InternetDos/assets/image/springcloud_eureka_02.png",d="/ZJH-InternetDos/assets/image/springcloud_eureka_03.png",u="/ZJH-InternetDos/assets/image/springcloud_eureka_04.png",k="/ZJH-InternetDos/assets/image/springcloud_eureka_05.png",v="/ZJH-InternetDos/assets/image/springcloud_eureka_06.png",m="/ZJH-InternetDos/assets/image/springcloud_eureka_07.png",b="/ZJH-InternetDos/assets/image/springcloud_eureka_08.png",g="/ZJH-InternetDos/assets/image/springcloud_eureka_09.png",h="/ZJH-InternetDos/assets/image/springcloud_eureka_10.png",_="/ZJH-InternetDos/assets/image/springcloud_eureka_11.png",y="/ZJH-InternetDos/assets/image/springcloud_eureka_12.png",f="/ZJH-InternetDos/assets/image/springcloud_eureka_13.png",w="/ZJH-InternetDos/assets/image/springcloud_eureka_14.png",x={},E=n('<blockquote><p>该文章参考作者macrozheng博客</p></blockquote><h3 id="服务注册与发现" tabindex="-1"><a class="header-anchor" href="#服务注册与发现" aria-hidden="true">#</a> 服务注册与发现</h3><p>Spring Cloud Eureka是Spring Cloud Netflix子项目的核心组件之一，主要用于微服务架构中的服务治理。本文将对搭建Eureka注册中心，搭建Eureka客户端，搭建Eureka集群及给Eureka注册中心添加登录认证进行介绍。</p><h3 id="eureka简介" tabindex="-1"><a class="header-anchor" href="#eureka简介" aria-hidden="true">#</a> Eureka简介</h3><p>在微服务架构中往往会有一个注册中心，每个微服务都会向注册中心去注册自己的地址及端口信息，注册中心维护着服务名称与服务实例的对应关系。每个微服务都会定时从注册中心获取服务列表，同时汇报自己的运行情况，这样当有的服务需要调用其他服务时，就可以从自己获取到的服务列表中获取实例地址进行调用，Eureka实现了这套服务注册与发现机制。</p><h3 id="搭建eureka注册中心" tabindex="-1"><a class="header-anchor" href="#搭建eureka注册中心" aria-hidden="true">#</a> 搭建Eureka注册中心</h3><h6 id="使用idea来创建springcloud应用" tabindex="-1"><a class="header-anchor" href="#使用idea来创建springcloud应用" aria-hidden="true">#</a> 使用IDEA来创建SpringCloud应用</h6><p>1、创建一个eureka-server模块，并使用Spring Initializer初始化一个SpringBoot项目<br><img src="'+i+'" title="图片标题" width=""><br> 2、填写应用信息<br><img src="'+c+'" title="图片标题" width=""><br> 3、选择你需要的SpringCloud组件进行创建<br><img src="'+d+`" title="图片标题" width=""><br> 4、创建完成后会发现pom.xml文件中已经有了eureka-server的依赖</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">&lt;</span>dependency<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>groupId<span class="token operator">&gt;</span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>artifactId<span class="token operator">&gt;</span>spring<span class="token operator">-</span>cloud<span class="token operator">-</span>starter<span class="token operator">-</span>netflix<span class="token operator">-</span>eureka<span class="token operator">-</span>server<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5、在启动类上添加@EnableEurekaServer注解来启用Euerka注册中心功能</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">EnableEurekaServer</span></span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">SpringBootApplication</span></span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EurekaServerApplication</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>EurekaServerApplication<span class="token punctuation">.</span>class<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>6、在配置文件application.yml中添加Eureka注册中心的配置</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>server<span class="token operator">:</span>
  port<span class="token operator">:</span> <span class="token number">8001</span> #指定运行端口
spring<span class="token operator">:</span>
  application<span class="token operator">:</span>
    name<span class="token operator">:</span> eureka<span class="token operator">-</span>server #指定服务名称
eureka<span class="token operator">:</span>
  instance<span class="token operator">:</span>
    hostname<span class="token operator">:</span> localhost #指定主机地址
  client<span class="token operator">:</span>
    fetch<span class="token operator">-</span>registry<span class="token operator">:</span> <span class="token boolean">false</span> #指定是否要从注册中心获取服务（注册中心不需要开启）
    register<span class="token operator">-</span><span class="token keyword">with</span><span class="token operator">-</span>eureka<span class="token operator">:</span> <span class="token boolean">false</span> #指定是否要注册到注册中心（注册中心不需要开启）
  server<span class="token operator">:</span>
    enable<span class="token operator">-</span>self<span class="token operator">-</span>preservation<span class="token operator">:</span> <span class="token boolean">false</span> #关闭保护模式
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="使用idea的run-dashboard来运行springcloud应用" tabindex="-1"><a class="header-anchor" href="#使用idea的run-dashboard来运行springcloud应用" aria-hidden="true">#</a> 使用IDEA的Run Dashboard来运行SpringCloud应用</h6><p>此时服务已经创建完成，点击启动类的main方法就可以运行了。但是在微服务项目中我们会启动很多服务，为了便于管理，我们使用IDEA的Run Dashboard来启动。</p>`,15),I=s("br",null,null,-1),S=s("img",{src:u,title:"图片标题",width:""},null,-1),D=s("br",null,null,-1),Z=s("br",null,null,-1),C=s("img",{src:k,title:"图片标题",width:""},null,-1),A=s("br",null,null,-1),H={href:"http://localhost:8001",target:"_blank",rel:"noopener noreferrer"},J=s("br",null,null,-1),B=s("img",{src:v,title:"图片标题",width:""},null,-1),N=n(`<h6 id="搭建eureka客户端" tabindex="-1"><a class="header-anchor" href="#搭建eureka客户端" aria-hidden="true">#</a> 搭建Eureka客户端</h6><p>1、新建一个eureka-client模块，并在pom.xml中添加如下依赖</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">&lt;</span>dependency<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>groupId<span class="token operator">&gt;</span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>artifactId<span class="token operator">&gt;</span>spring<span class="token operator">-</span>cloud<span class="token operator">-</span>starter<span class="token operator">-</span>netflix<span class="token operator">-</span>eureka<span class="token operator">-</span>client<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>dependency<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>groupId<span class="token operator">&gt;</span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>artifactId<span class="token operator">&gt;</span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">-</span>web<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、在启动类上添加@EnableDiscoveryClient注解表明是一个Eureka客户端</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">EnableDiscoveryClient</span></span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">SpringBootApplication</span></span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EurekaClientApplication</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>EurekaClientApplication<span class="token punctuation">.</span>class<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3、在配置文件application.yml中添加Eureka客户端的配置</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>server<span class="token operator">:</span>
  port<span class="token operator">:</span> <span class="token number">8101</span> #运行端口号
spring<span class="token operator">:</span>
  application<span class="token operator">:</span>
    name<span class="token operator">:</span> eureka<span class="token operator">-</span>client #服务名称
eureka<span class="token operator">:</span>
  client<span class="token operator">:</span>
    register<span class="token operator">-</span><span class="token keyword">with</span><span class="token operator">-</span>eureka<span class="token operator">:</span> <span class="token boolean">true</span> #注册到Eureka的注册中心
    fetch<span class="token operator">-</span>registry<span class="token operator">:</span> <span class="token boolean">true</span> #获取注册实例列表
    service<span class="token operator">-</span>url<span class="token operator">:</span>
      defaultZone<span class="token operator">:</span> http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">8001</span><span class="token operator">/</span>eureka<span class="token operator">/</span> #配置注册中心地址
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4、运行eureka-client<br><img src="`+m+'" title="图片标题" width=""></p>',8),R={href:"http://localhost:8001/",target:"_blank",rel:"noopener noreferrer"},q=s("br",null,null,-1),V=s("img",{src:b,title:"图片标题",width:""},null,-1),W=n(`<h3 id="搭建eureka注册中心集群" tabindex="-1"><a class="header-anchor" href="#搭建eureka注册中心集群" aria-hidden="true">#</a> 搭建Eureka注册中心集群</h3><h6 id="搭建两个注册中心" tabindex="-1"><a class="header-anchor" href="#搭建两个注册中心" aria-hidden="true">#</a> 搭建两个注册中心</h6><p>由于所有服务都会注册到注册中心去，服务之间的调用都是通过从注册中心获取的服务列表来调用，注册中心一旦宕机，所有服务调用都会出现问题。所以我们需要多个注册中心组成集群来提供服务，下面将搭建一个双节点的注册中心集群。</p><p>1、给eureka-sever添加配置文件application-replica1.yml配置第一个注册中心</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>server<span class="token operator">:</span>
  port<span class="token operator">:</span> <span class="token number">8002</span>
spring<span class="token operator">:</span>
  application<span class="token operator">:</span>
    name<span class="token operator">:</span> eureka<span class="token operator">-</span>server
eureka<span class="token operator">:</span>
  instance<span class="token operator">:</span>
    hostname<span class="token operator">:</span> replica1
  client<span class="token operator">:</span>
    serviceUrl<span class="token operator">:</span>
      defaultZone<span class="token operator">:</span> http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>replica2<span class="token operator">:</span><span class="token number">8003</span><span class="token operator">/</span>eureka<span class="token operator">/</span> #注册到另一个Eureka注册中心
    fetch<span class="token operator">-</span>registry<span class="token operator">:</span> <span class="token boolean">true</span>
    register<span class="token operator">-</span><span class="token keyword">with</span><span class="token operator">-</span>eureka<span class="token operator">:</span> <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、给eureka-sever添加配置文件application-replica2.yml配置第二个注册中心</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>server<span class="token operator">:</span>
  port<span class="token operator">:</span> <span class="token number">8003</span>
spring<span class="token operator">:</span>
  application<span class="token operator">:</span>
    name<span class="token operator">:</span> eureka<span class="token operator">-</span>server
eureka<span class="token operator">:</span>
  instance<span class="token operator">:</span>
    hostname<span class="token operator">:</span> replica2
  client<span class="token operator">:</span>
    serviceUrl<span class="token operator">:</span>
      defaultZone<span class="token operator">:</span> http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>replica1<span class="token operator">:</span><span class="token number">8002</span><span class="token operator">/</span>eureka<span class="token operator">/</span> #注册到另一个Eureka注册中心
    fetch<span class="token operator">-</span>registry<span class="token operator">:</span> <span class="token boolean">true</span>
    register<span class="token operator">-</span><span class="token keyword">with</span><span class="token operator">-</span>eureka<span class="token operator">:</span> <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里我们通过两个注册中心互相注册，搭建了注册中心的双节点集群，由于defaultZone使用了域名，所以还需在本机的host文件中配置一下。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span> replica1
<span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span> replica2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="运行eureka注册中心集群" tabindex="-1"><a class="header-anchor" href="#运行eureka注册中心集群" aria-hidden="true">#</a> 运行Eureka注册中心集群</h6><p>在IDEA中我们可以通过使用不同的配置文件来启动同一个SpringBoot应用</p><p>1、添加两个配置，分别以application-replica1.yml和application-replica2.yml来启动eureka-server<br><img src="`+g+'" title="图片标题" width=""></p><p>2、配置启动的配置文件<br><img src="'+h+'" title="图片标题" width=""></p>',13),$={href:"http://replica1:8002/",target:"_blank",rel:"noopener noreferrer"},j=s("br",null,null,-1),z=s("img",{src:_,title:"图片标题",width:""},null,-1),F=n(`<p>4、修改Eureka-client，让其连接到集群，添加eureka-client的配置文件application-replica.yml，让其同时注册到两个注册中心。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>server<span class="token operator">:</span>
  port<span class="token operator">:</span> <span class="token number">8102</span>
spring<span class="token operator">:</span>
  application<span class="token operator">:</span>
    name<span class="token operator">:</span> eureka<span class="token operator">-</span>client
eureka<span class="token operator">:</span>
  client<span class="token operator">:</span>
    register<span class="token operator">-</span><span class="token keyword">with</span><span class="token operator">-</span>eureka<span class="token operator">:</span> <span class="token boolean">true</span>
    fetch<span class="token operator">-</span>registry<span class="token operator">:</span> <span class="token boolean">true</span>
    service<span class="token operator">-</span>url<span class="token operator">:</span>
      defaultZone<span class="token operator">:</span> http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>replica1<span class="token operator">:</span><span class="token number">8002</span><span class="token operator">/</span>eureka<span class="token operator">/</span><span class="token punctuation">,</span>http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>replica2<span class="token operator">:</span><span class="token number">8003</span><span class="token operator">/</span>eureka<span class="token operator">/</span> #同时注册到两个注册中心
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="`+y+`" title="图片标题" width=""><h3 id="给eureka注册中心添加认证" tabindex="-1"><a class="header-anchor" href="#给eureka注册中心添加认证" aria-hidden="true">#</a> 给Eureka注册中心添加认证</h3><h6 id="创建一个eureka-security-server模块-在pom-xml中添加以下依赖" tabindex="-1"><a class="header-anchor" href="#创建一个eureka-security-server模块-在pom-xml中添加以下依赖" aria-hidden="true">#</a> 创建一个eureka-security-server模块，在pom.xml中添加以下依赖</h6><p>1、需要添加SpringSecurity模块。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">&lt;</span>dependency<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>groupId<span class="token operator">&gt;</span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>artifactId<span class="token operator">&gt;</span>spring<span class="token operator">-</span>cloud<span class="token operator">-</span>starter<span class="token operator">-</span>netflix<span class="token operator">-</span>eureka<span class="token operator">-</span>server<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>dependency<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>groupId<span class="token operator">&gt;</span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>artifactId<span class="token operator">&gt;</span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">-</span>security<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="添加application-yml配置文件" tabindex="-1"><a class="header-anchor" href="#添加application-yml配置文件" aria-hidden="true">#</a> 添加application.yml配置文件</h6><p>主要是配置了登录注册中心的用户名和密码。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>server<span class="token operator">:</span>
  port<span class="token operator">:</span> <span class="token number">8004</span>
spring<span class="token operator">:</span>
  application<span class="token operator">:</span>
    name<span class="token operator">:</span> eureka<span class="token operator">-</span>security<span class="token operator">-</span>server
  security<span class="token operator">:</span> #配置SpringSecurity登录用户名和密码
    user<span class="token operator">:</span>
      name<span class="token operator">:</span> macro
      password<span class="token operator">:</span> <span class="token number">123456</span>
eureka<span class="token operator">:</span>
  instance<span class="token operator">:</span>
    hostname<span class="token operator">:</span> localhost
  client<span class="token operator">:</span>
    fetch<span class="token operator">-</span>registry<span class="token operator">:</span> <span class="token boolean">false</span>
    register<span class="token operator">-</span><span class="token keyword">with</span><span class="token operator">-</span>eureka<span class="token operator">:</span> <span class="token boolean">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="添加java配置websecurityconfig" tabindex="-1"><a class="header-anchor" href="#添加java配置websecurityconfig" aria-hidden="true">#</a> 添加Java配置WebSecurityConfig</h6><p>默认情况下添加SpringSecurity依赖的应用每个请求都需要添加CSRF token才能访问，Eureka客户端注册时并不会添加，所以需要配置/eureka/**路径不需要CSRF token。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">EnableWebSecurity</span></span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebSecurityConfig</span> <span class="token keyword">extends</span> <span class="token class-name">WebSecurityConfigurerAdapter</span> <span class="token punctuation">{</span>

    <span class="token decorator"><span class="token at operator">@</span><span class="token function">Override</span></span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span>HttpSecurity http<span class="token punctuation">)</span> throws Exception <span class="token punctuation">{</span>
        http<span class="token punctuation">.</span><span class="token function">csrf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ignoringAntMatchers</span><span class="token punctuation">(</span><span class="token string">&quot;/eureka/**&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span>http<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),L={id:"运行eureka-security-server-访问http-localhost-8004-发现需要登录认证",tabindex:"-1"},U=s("a",{class:"header-anchor",href:"#运行eureka-security-server-访问http-localhost-8004-发现需要登录认证","aria-hidden":"true"},"#",-1),M={href:"http://localhost:8004",target:"_blank",rel:"noopener noreferrer"},O=n('<img src="'+f+`" title="图片标题" width=""><h6 id="eureka-client注册到有登录认证的注册中心" tabindex="-1"><a class="header-anchor" href="#eureka-client注册到有登录认证的注册中心" aria-hidden="true">#</a> eureka-client注册到有登录认证的注册中心</h6><p>1、配置文件中需要修改注册中心地址格式</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>$<span class="token punctuation">{</span>username<span class="token punctuation">}</span><span class="token operator">:</span>$<span class="token punctuation">{</span>password<span class="token punctuation">}</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">$</span></span><span class="token punctuation">{</span>hostname<span class="token punctuation">}</span><span class="token operator">:</span>$<span class="token punctuation">{</span>port<span class="token punctuation">}</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">eureka</span><span class="token regex-delimiter">/</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2、添加application-security.yml配置文件，按格式修改用户名和密码</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>server<span class="token operator">:</span>
  port<span class="token operator">:</span> <span class="token number">8103</span>
spring<span class="token operator">:</span>
  application<span class="token operator">:</span>
    name<span class="token operator">:</span> eureka<span class="token operator">-</span>client
eureka<span class="token operator">:</span>
  client<span class="token operator">:</span>
    register<span class="token operator">-</span><span class="token keyword">with</span><span class="token operator">-</span>eureka<span class="token operator">:</span> <span class="token boolean">true</span>
    fetch<span class="token operator">-</span>registry<span class="token operator">:</span> <span class="token boolean">true</span>
    service<span class="token operator">-</span>url<span class="token operator">:</span>
      defaultZone<span class="token operator">:</span> http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>macro<span class="token operator">:</span><span class="token number">123456</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">localhost</span></span><span class="token operator">:</span><span class="token number">8004</span><span class="token operator">/</span>eureka<span class="token operator">/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3、以application-security.yml配置运行eureka-client，可以在注册中心界面看到eureka-client已经成功注册<br><img src="`+w+`" title="图片标题" width=""></p><h3 id="eureka的常用配置" tabindex="-1"><a class="header-anchor" href="#eureka的常用配置" aria-hidden="true">#</a> Eureka的常用配置</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>eureka<span class="token operator">:</span>
  client<span class="token operator">:</span> #eureka客户端配置
    register<span class="token operator">-</span><span class="token keyword">with</span><span class="token operator">-</span>eureka<span class="token operator">:</span> <span class="token boolean">true</span> #是否将自己注册到eureka服务端上去
    fetch<span class="token operator">-</span>registry<span class="token operator">:</span> <span class="token boolean">true</span> #是否获取eureka服务端上注册的服务列表
    service<span class="token operator">-</span>url<span class="token operator">:</span>
      defaultZone<span class="token operator">:</span> http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">8001</span><span class="token operator">/</span>eureka<span class="token operator">/</span> # 指定注册中心地址
    enabled<span class="token operator">:</span> <span class="token boolean">true</span> # 启用eureka客户端
    registry<span class="token operator">-</span>fetch<span class="token operator">-</span>interval<span class="token operator">-</span>seconds<span class="token operator">:</span> <span class="token number">30</span> #定义去eureka服务端获取服务列表的时间间隔
  instance<span class="token operator">:</span> #eureka客户端实例配置
    lease<span class="token operator">-</span>renewal<span class="token operator">-</span>interval<span class="token operator">-</span><span class="token keyword">in</span><span class="token operator">-</span>seconds<span class="token operator">:</span> <span class="token number">30</span> #定义服务多久去注册中心续约
    lease<span class="token operator">-</span>expiration<span class="token operator">-</span>duration<span class="token operator">-</span><span class="token keyword">in</span><span class="token operator">-</span>seconds<span class="token operator">:</span> <span class="token number">90</span> #定义服务多久不去续约认为服务失效
    metadata<span class="token operator">-</span>map<span class="token operator">:</span>
      zone<span class="token operator">:</span> jiangsu #所在区域
    hostname<span class="token operator">:</span> localhost #服务主机名称
    prefer<span class="token operator">-</span>ip<span class="token operator">-</span>address<span class="token operator">:</span> <span class="token boolean">false</span> #是否优先使用ip来作为主机名
  server<span class="token operator">:</span> #eureka服务端配置
    enable<span class="token operator">-</span>self<span class="token operator">-</span>preservation<span class="token operator">:</span> <span class="token boolean">false</span> #关闭eureka服务端的保护机制
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9);function T(G,K){const e=t("ExternalLinkIcon");return r(),l("div",null,[E,s("p",null,[a("1、打开Run Dashboard，默认情况下，当IDEA检查到你的项目中有SpringBoot应用时，会提示你开启，如果你没开启，可以用以下方法开启。"),I,S,D,a(" 2、运行SpringCloud应用"),Z,C,A,a(" 3、运行完成后访问地址"),s("a",H,[a("http://localhost:8001"),p(e)]),a(" 可以看到Eureka注册中心的界面"),J,B]),N,s("p",null,[a("5、查看注册中心"),s("a",R,[a("http://localhost:8001/"),p(e)]),a(" 发现Eureka客户端已经成功注册"),q,V]),W,s("p",null,[a("3、启动两个eureka-server，访问其中一个注册中心"),s("a",$,[a("http://replica1:8002/"),p(e)]),a(" 发现另一个已经成为其备份"),j,z]),F,s("h6",L,[U,a(" 运行eureka-security-server，访问"),s("a",M,[a("http://localhost:8004"),p(e)]),a(" 发现需要登录认证")]),O])}const X=o(x,[["render",T],["__file","SpringCloud项目_Eureka.html.vue"]]);export{X as default};
