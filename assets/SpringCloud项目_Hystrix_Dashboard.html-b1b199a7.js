import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as r,c as l,d as s,e as a,b as e,f as t}from"./app-b5233593.js";const i="/ZJH-InternetDos/assets/image/springcloud_hystrix_09.png",c="/ZJH-InternetDos/assets/image/springcloud_hystrix_10.png",d="/ZJH-InternetDos/assets/image/springcloud_hystrix_11.png",u="/ZJH-InternetDos/assets/image/springcloud_hystrix_12.png",k="/ZJH-InternetDos/assets/image/springcloud_hystrix_13.png",v="/ZJH-InternetDos/assets/image/springcloud_hystrix_14.png",h="/ZJH-InternetDos/assets/image/springcloud_hystrix_15.png",b="/ZJH-InternetDos/assets/image/springcloud_hystrix_16.png",m={},g=t(`<blockquote><p>该文章参考作者macrozheng博客</p></blockquote><p>Hystrix Dashboard 是Spring Cloud中查看Hystrix实例执行情况的一种仪表盘组件，支持查看单个实例和查看集群实例，本文将对其用法进行详细介绍。</p><h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3><p>Hystrix提供了Hystrix Dashboard来实时监控HystrixCommand方法的执行情况。 Hystrix Dashboard可以有效地反映出每个Hystrix实例的运行情况，帮助我们快速发现系统中的问题，从而采取对应措施。</p><h3 id="hystrix单个实例监控" tabindex="-1"><a class="header-anchor" href="#hystrix单个实例监控" aria-hidden="true">#</a> Hystrix单个实例监控</h3><p>我们先通过使用Hystrix Dashboard监控单个Hystrix实例来了解下它的使用方法。</p><h6 id="创建一个hystrix-dashboard模块" tabindex="-1"><a class="header-anchor" href="#创建一个hystrix-dashboard模块" aria-hidden="true">#</a> 创建一个hystrix-dashboard模块</h6><p>用来监控hystrix实例的执行情况。</p><ul><li>用来监控hystrix实例的执行情况。</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">&lt;</span>dependency<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>groupId<span class="token operator">&gt;</span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>artifactId<span class="token operator">&gt;</span>spring<span class="token operator">-</span>cloud<span class="token operator">-</span>starter<span class="token operator">-</span>netflix<span class="token operator">-</span>eureka<span class="token operator">-</span>client<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>dependency<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>groupId<span class="token operator">&gt;</span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>artifactId<span class="token operator">&gt;</span>spring<span class="token operator">-</span>cloud<span class="token operator">-</span>starter<span class="token operator">-</span>netflix<span class="token operator">-</span>hystrix<span class="token operator">-</span>dashboard<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>dependency<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>groupId<span class="token operator">&gt;</span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>artifactId<span class="token operator">&gt;</span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">-</span>actuator<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在application.yml进行配置：</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>server<span class="token operator">:</span>
  port<span class="token operator">:</span> <span class="token number">8501</span>
spring<span class="token operator">:</span>
  application<span class="token operator">:</span>
    name<span class="token operator">:</span> hystrix<span class="token operator">-</span>dashboard
eureka<span class="token operator">:</span>
  client<span class="token operator">:</span>
    register<span class="token operator">-</span><span class="token keyword">with</span><span class="token operator">-</span>eureka<span class="token operator">:</span> <span class="token boolean">true</span>
    fetch<span class="token operator">-</span>registry<span class="token operator">:</span> <span class="token boolean">true</span>
    service<span class="token operator">-</span>url<span class="token operator">:</span>
      defaultZone<span class="token operator">:</span> http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">8001</span><span class="token operator">/</span>eureka<span class="token operator">/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在启动类上添加@EnableHystrixDashboard来启用监控功能：</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">EnableHystrixDashboard</span></span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">EnableDiscoveryClient</span></span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">SpringBootApplication</span></span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HystrixDashboardApplication</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>HystrixDashboardApplication<span class="token punctuation">.</span>class<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="启动相关服务" tabindex="-1"><a class="header-anchor" href="#启动相关服务" aria-hidden="true">#</a> 启动相关服务</h3><p>这次我们需要启动如下服务：eureka-server、user-service、hystrix-service、hystrix-dashboard，启动后注册中心显示如下。<br><img src="`+i+'" title="图片标题" width=""></p><h6 id="hystrix实例监控演示" tabindex="-1"><a class="header-anchor" href="#hystrix实例监控演示" aria-hidden="true">#</a> Hystrix实例监控演示</h6>',17),y={href:"http://localhost:8501/hystrix",target:"_blank",rel:"noopener noreferrer"},x=s("br",null,null,-1),_=s("img",{src:c,title:"图片标题",width:""},null,-1),f=s("li",null,[s("p",null,[a("填写好信息后点击监控按钮，这里我们需要注意的是，由于我们本地不支持https，所以我们的地址需要填入的是http，否则会无法获取监控信息；"),s("br"),s("img",{src:d,title:"图片标题",width:""})])],-1),I=s("li",null,[s("p",null,"还有一点值得注意的是，被监控的hystrix-service服务需要开启Actuator的hystrix.stream端点，配置信息如下：")],-1),H=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>management<span class="token operator">:</span>
  endpoints<span class="token operator">:</span>
    web<span class="token operator">:</span>
      exposure<span class="token operator">:</span>
        include<span class="token operator">:</span> <span class="token string">&#39;hystrix.stream&#39;</span> #暴露hystrix监控端点
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),w={href:"http://localhost:8401/user/testCommand/1",target:"_blank",rel:"noopener noreferrer"},D=s("br",null,null,-1),C=s("img",{src:u,title:"图片标题",width:""},null,-1),S=s("li",null,[s("p",null,"可以发现曾经我们在@HystrixCommand中添加的commandKey和threadPoolKey属性都显示在上面了，并且有7次调用都成功了。")],-1),A=t('<h6 id="hystrix-dashboard-图表解读" tabindex="-1"><a class="header-anchor" href="#hystrix-dashboard-图表解读" aria-hidden="true">#</a> Hystrix Dashboard 图表解读</h6><p>图表解读如下，需要注意的是，小球代表该实例健康状态及流量情况，颜色越显眼，表示实例越不健康，小球越大，表示实例流量越大。曲线表示Hystrix实例的实时流量变化。<br><img src="'+k+`" title="图片标题" width=""></p><h3 id="hystrix-集群实例监控" tabindex="-1"><a class="header-anchor" href="#hystrix-集群实例监控" aria-hidden="true">#</a> Hystrix 集群实例监控</h3><p>这里我们使用Turbine来聚合hystrix-service服务的监控信息，然后我们的hystrix-dashboard服务就可以从Turbine获取聚合好的监控信息展示给我们了。</p><h6 id="创建一个turbine-service模块" tabindex="-1"><a class="header-anchor" href="#创建一个turbine-service模块" aria-hidden="true">#</a> 创建一个turbine-service模块</h6><p>用来聚合hystrix-service的监控信息。</p><ul><li>在pom.xml中添加相关依赖：</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">&lt;</span>dependency<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>groupId<span class="token operator">&gt;</span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>artifactId<span class="token operator">&gt;</span>spring<span class="token operator">-</span>cloud<span class="token operator">-</span>starter<span class="token operator">-</span>netflix<span class="token operator">-</span>eureka<span class="token operator">-</span>client<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>dependency<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>groupId<span class="token operator">&gt;</span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>artifactId<span class="token operator">&gt;</span>spring<span class="token operator">-</span>cloud<span class="token operator">-</span>starter<span class="token operator">-</span>netflix<span class="token operator">-</span>turbine<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>dependency<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>groupId<span class="token operator">&gt;</span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>artifactId<span class="token operator">&gt;</span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">-</span>actuator<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在application.yml进行配置，主要是添加了Turbine相关配置：</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>server<span class="token operator">:</span>
  port<span class="token operator">:</span> <span class="token number">8601</span>
spring<span class="token operator">:</span>
  application<span class="token operator">:</span>
    name<span class="token operator">:</span> turbine<span class="token operator">-</span>service
eureka<span class="token operator">:</span>
  client<span class="token operator">:</span>
    register<span class="token operator">-</span><span class="token keyword">with</span><span class="token operator">-</span>eureka<span class="token operator">:</span> <span class="token boolean">true</span>
    fetch<span class="token operator">-</span>registry<span class="token operator">:</span> <span class="token boolean">true</span>
    service<span class="token operator">-</span>url<span class="token operator">:</span>
      defaultZone<span class="token operator">:</span> http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">8001</span><span class="token operator">/</span>eureka<span class="token operator">/</span>
turbine<span class="token operator">:</span>
  app<span class="token operator">-</span>config<span class="token operator">:</span> hystrix<span class="token operator">-</span>service #指定需要收集信息的服务名称
  cluster<span class="token operator">-</span>name<span class="token operator">-</span>expression<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">&#39;default&#39;</span><span class="token punctuation">)</span> #指定服务所属集群
  combine<span class="token operator">-</span>host<span class="token operator">-</span>port<span class="token operator">:</span> <span class="token boolean">true</span> #以主机名和端口号来区分服务
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在启动类上添加@EnableTurbine来启用Turbine相关功能：</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">EnableTurbine</span></span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">EnableDiscoveryClient</span></span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">SpringBootApplication</span></span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TurbineServiceApplication</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>TurbineServiceApplication<span class="token punctuation">.</span>class<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="启动相关服务-1" tabindex="-1"><a class="header-anchor" href="#启动相关服务-1" aria-hidden="true">#</a> 启动相关服务</h6><p>使用application-replica1.yml配置再启动一个hystrix-service服务，启动turbine-service服务，此时注册中心显示如下。<br><img src="`+v+'" title="图片标题" width=""></p><h6 id="hystrix集群监控演示" tabindex="-1"><a class="header-anchor" href="#hystrix集群监控演示" aria-hidden="true">#</a> Hystrix集群监控演示</h6>',15),E={href:"http://localhost:8501/hystrix",target:"_blank",rel:"noopener noreferrer"},Z=s("li",null,[s("p",null,[a("添加集群监控地址，需要注意的是我们需要添加的是turbine-service的监控端点地址："),s("br"),s("img",{src:h,title:"图片标题",width:""})])],-1),T={href:"http://localhost:8401/user/testCommand/1%E4%BB%A5%E5%8F%8Ahttp://localhost:8402/user/testCommand/1",target:"_blank",rel:"noopener noreferrer"},J=s("br",null,null,-1),B=s("img",{src:b,title:"图片标题",width:""},null,-1),N=s("li",null,[s("p",null,"可以看到我们的Hystrix实例数量变成了两个。")],-1);function V(q,K){const n=p("ExternalLinkIcon");return r(),l("div",null,[g,s("ul",null,[s("li",null,[s("p",null,[a("访问Hystrix Dashboard："),s("a",y,[a("http://localhost:8501/hystrix"),e(n)]),x,_])]),f,I]),H,s("ul",null,[s("li",null,[s("p",null,[a("调用几次hystrix-service的接口："),s("a",w,[a("http://localhost:8401/user/testCommand/1"),e(n)]),D,C])]),S]),A,s("ul",null,[s("li",null,[s("p",null,[a("访问Hystrix Dashboard："),s("a",E,[a("http://localhost:8501/hystrix"),e(n)])])]),Z,s("li",null,[s("p",null,[a("调用几次hystrix-service的接口："),s("a",T,[a("http://localhost:8401/user/testCommand/1以及http://localhost:8402/user/testCommand/1"),e(n)]),J,B])]),N])])}const F=o(m,[["render",V],["__file","SpringCloud项目_Hystrix_Dashboard.html.vue"]]);export{F as default};
