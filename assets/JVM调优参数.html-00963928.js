import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as n,f as e}from"./app-b5233593.js";const t={},p=e(`<h3 id="显式指定堆内存–xms和-xmx" tabindex="-1"><a class="header-anchor" href="#显式指定堆内存–xms和-xmx" aria-hidden="true">#</a> 显式指定堆内存–Xms和-Xmx</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">-</span>Xms<span class="token operator">&lt;</span>heap size<span class="token operator">&gt;</span><span class="token punctuation">[</span>unit<span class="token punctuation">]</span>
<span class="token operator">-</span>Xmx<span class="token operator">&lt;</span>heap size<span class="token operator">&gt;</span><span class="token punctuation">[</span>unit<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="显式新生代内存-young-generation" tabindex="-1"><a class="header-anchor" href="#显式新生代内存-young-generation" aria-hidden="true">#</a> 显式新生代内存(Young Generation)</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span>NewSize<span class="token operator">=</span><span class="token operator">&lt;</span>young size<span class="token operator">&gt;</span><span class="token punctuation">[</span>unit<span class="token punctuation">]</span>
<span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span>MaxNewSize<span class="token operator">=</span><span class="token operator">&lt;</span>young size<span class="token operator">&gt;</span><span class="token punctuation">[</span>unit<span class="token punctuation">]</span>
<span class="token operator">-</span>Xmn256m
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="设置老年代和新生代内存比值" tabindex="-1"><a class="header-anchor" href="#设置老年代和新生代内存比值" aria-hidden="true">#</a> 设置老年代和新生代内存比值</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span>NewRatio<span class="token operator">=</span><span class="token operator">&lt;</span>int<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="显式指定永久代-元空间的大小" tabindex="-1"><a class="header-anchor" href="#显式指定永久代-元空间的大小" aria-hidden="true">#</a> 显式指定永久代/元空间的大小</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>#永久代
<span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span>PermSize<span class="token operator">=</span><span class="token constant">N</span> <span class="token function">#方法区</span> <span class="token punctuation">(</span>永久代<span class="token punctuation">)</span> 初始大小
<span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span>MaxPermSize<span class="token operator">=</span><span class="token constant">N</span> <span class="token function">#方法区</span> <span class="token punctuation">(</span>永久代<span class="token punctuation">)</span> 最大大小<span class="token punctuation">,</span>超过这个值将会抛出 OutOfMemoryError 异常<span class="token operator">:</span>java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>OutOfMemoryError<span class="token operator">:</span> PermGen

#元空间
<span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span>MetaspaceSize<span class="token operator">=</span><span class="token constant">N</span> #设置 Metaspace 的初始大小（是一个常见的误区，后面会解释）
<span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span>MaxMetaspaceSize<span class="token operator">=</span><span class="token constant">N</span> #设置 Metaspace 的最大大小
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="垃圾收集相关" tabindex="-1"><a class="header-anchor" href="#垃圾收集相关" aria-hidden="true">#</a> 垃圾收集相关</h3><h6 id="垃圾收集器" tabindex="-1"><a class="header-anchor" href="#垃圾收集器" aria-hidden="true">#</a> 垃圾收集器</h6><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span><span class="token operator">+</span>UseSerialGC
<span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span><span class="token operator">+</span>UseParallelGC
<span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span><span class="token operator">+</span>UseParNewGC
<span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span><span class="token operator">+</span>UseG1GC
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="gc日志记录" tabindex="-1"><a class="header-anchor" href="#gc日志记录" aria-hidden="true">#</a> GC日志记录</h6><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code># 必选
# 打印基本 <span class="token constant">GC</span> 信息
<span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span><span class="token operator">+</span>PrintGCDetails
<span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span><span class="token operator">+</span>PrintGCDateStamps
# 打印对象分布
<span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span><span class="token operator">+</span>PrintTenuringDistribution
# 打印堆数据
<span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span><span class="token operator">+</span>PrintHeapAtGC
# 打印Reference处理信息
# 强引用<span class="token operator">/</span>弱引用<span class="token operator">/</span>软引用<span class="token operator">/</span>虚引用<span class="token operator">/</span>finalize 相关的方法
<span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span><span class="token operator">+</span>PrintReferenceGC
# 打印<span class="token constant">STW</span>时间
<span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span><span class="token operator">+</span>PrintGCApplicationStoppedTime

# 可选
# 打印safepoint信息，进入 <span class="token constant">STW</span> 阶段之前，需要要找到一个合适的 safepoint
<span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span><span class="token operator">+</span>PrintSafepointStatistics
<span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span>PrintSafepointStatisticsCount<span class="token operator">=</span><span class="token number">1</span>

# <span class="token constant">GC</span>日志输出的文件路径
<span class="token operator">-</span>Xloggc<span class="token operator">:</span><span class="token operator">/</span>path<span class="token operator">/</span>to<span class="token operator">/</span>gc<span class="token operator">-</span><span class="token operator">%</span>t<span class="token punctuation">.</span>log
# 开启日志文件分割
<span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span><span class="token operator">+</span>UseGCLogFileRotation
# 最多分割几个文件，超过之后从头文件开始写
<span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span>NumberOfGCLogFiles<span class="token operator">=</span><span class="token number">14</span>
# 每个文件上限大小，超过就触发分割
<span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span>GCLogFileSize<span class="token operator">=</span>50M
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="处理oom" tabindex="-1"><a class="header-anchor" href="#处理oom" aria-hidden="true">#</a> 处理OOM</h6><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span><span class="token operator">+</span>HeapDumpOnOutOfMemoryError
<span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span>HeapDumpPath<span class="token operator">=</span><span class="token punctuation">.</span><span class="token operator">/</span>java_pid<span class="token operator">&lt;</span>pid<span class="token operator">&gt;</span><span class="token punctuation">.</span>hprof
<span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span>OnOutOfMemoryError<span class="token operator">=</span><span class="token string">&quot;&lt; cmd args &gt;;&lt; cmd args &gt;&quot;</span>
<span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span><span class="token operator">+</span>UseGCOverheadLimit
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15),o=[p];function r(c,l){return a(),n("div",null,o)}const k=s(t,[["render",r],["__file","JVM调优参数.html.vue"]]);export{k as default};
