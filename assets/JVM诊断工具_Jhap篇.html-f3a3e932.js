import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as s,o as r,c as l,d as n,e as a,b as e,w as c,f as i}from"./app-b5233593.js";const d={},h=n("h2",{id:"简介",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#简介","aria-hidden":"true"},"#"),a(" 简介")],-1),u=n("br",null,null,-1),_={href:"http://localhost:7000/%EF%BC%8C%E5%B0%B1%E5%8F%AF%E4%BB%A5%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E5%88%86%E6%9E%90%E3%80%82",target:"_blank",rel:"noopener noreferrer"},k=n("br",null,null,-1),m=n("br",null,null,-1),b=i(`<h2 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h2><p>（图片资源放上去速度慢，待完善）</p><h2 id="基本语法" tabindex="-1"><a class="header-anchor" href="#基本语法" aria-hidden="true">#</a> 基本语法</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>option参数：<span class="token operator">-</span>stack <span class="token boolean">false</span><span class="token operator">|</span><span class="token boolean">true</span>：关闭<span class="token operator">|</span>打开对象分配调用栈跟踪
​option参数：<span class="token operator">-</span>refs <span class="token boolean">false</span><span class="token operator">|</span><span class="token boolean">true</span>：关闭<span class="token operator">|</span>打开对象引用跟踪
​option参数：<span class="token operator">-</span>port port<span class="token operator">-</span><span class="token builtin">number</span>：设置jhat <span class="token constant">HTTP</span> Server的端口号，默认<span class="token number">7000</span>
​option参数：<span class="token operator">-</span>exclude exclude<span class="token operator">-</span>file：执行对象查询时需要排除的数据成员列表文件
​option参数：<span class="token operator">-</span>baseline exclude<span class="token operator">-</span>file：指定一个基准堆转储
​option参数：<span class="token operator">-</span>debug int：设置debug级别
​option参数：<span class="token operator">-</span>version：启动后显示版本信息就退出
​option参数：<span class="token operator">-</span><span class="token constant">J</span><span class="token operator">&lt;</span>flag<span class="token operator">&gt;</span>：传入启动参数，比如<span class="token operator">-</span><span class="token constant">J</span> <span class="token operator">-</span>Xmx512m
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function v(E,f){const o=s("ExternalLinkIcon"),t=s("RouterLink");return r(),l("div",null,[h,n("p",null,[a("Sun JDK提供的jhat命令与jmap命令搭配使用，用于分析jmap生成的heap dump文件（堆转储快照）。jhat内置了一个微型的HTTP/HTML服务器。生成dump文件的分析结果后，用户可以在浏览器中查看分析结果（分析虚拟机转储快照信息）。"),u,a(" 使用了jhat命令，就启动了一个http服务，端口是7000，即"),n("a",_,[a("http://localhost:7000/，就可以在浏览器分析。"),e(o)]),k,a(" 说明：jhat命令在JDK9、JDK10中已经被删除，官方建议用VisualVM代替"),m,a(" 相关测试、基本用法参考文章"),e(t,{to:"/Java/JVM/JVM%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/JVM%E8%AF%8A%E6%96%AD%E5%B7%A5%E5%85%B7_Jhat%E7%AF%87.html"},{default:c(()=>[a("JVM诊断工具_Jhat篇")]),_:1})]),b])}const x=p(d,[["render",v],["__file","JVM诊断工具_Jhap篇.html.vue"]]);export{x as default};
